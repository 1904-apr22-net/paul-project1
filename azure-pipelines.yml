# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  solutionPath: 'StoreApplicationWeb'
  appProjectPath: 'StoreApplicationWeb/StoreApplicationWeb'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar'
    organization: 'pgrimes88-github'
    scannerMode: 'MSBuild'
    projectKey: 'Paul'
    extraProperties: sonar
      sonar.cs.opencover.reportsPath="$(Build.ArtifactStagingDirectory)/coverage/*"

- script: dotnet build --configuration $(buildConfiguration) $(solutionPath)
  displayName: 'dotnet build $(buildConfiguration) $(solutionPath)'
- script: dotnet test
    --configuration $(buildConfiguration)
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput='$(Build.ArtifactStagingDirectory)/coverage/'
    /p:Exclude="[xunit*]*"
  workingDirectory: $(solutionPath)
  displayName: 'dotnet test $(buildConfiguration)'
  
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: SonarCloudAnalyze@1
  inputs:
    {}
  displayName: Run code analysis
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '60'
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    projects: '$(appProjectPath)'
    publishWebProjects: false
    arguments: >-
      --configuration $(buildConfiguration)
      --output $(System.DefaultWorkingDirectory)/publish
    zipAfterPublish: true
  displayName: dotnet publish
  
- task: AzureRmWebAppDeployment@4
  displayName: Azure App Service deploy
  inputs:
    azureSubscription: Paul
    WebAppName: PaulIsGod
    Package: $(System.DefaultWorkingDirectory)/publish/*.zip